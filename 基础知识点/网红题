 [10, 20, 30].map(parseInt)

 parseInt() 函数可解析一个字符串，并返回一个整数 parseInt(string, radix),将string以radix进制转化为10进制

const res = [10, 20, 30].map(parseInt)
console.log(res)   //[10, NAN, NAN]
    // 拆解
    [10, 20, 30].map((num, index) => {
        return parseInt(num, index)
    })

radix	
可选。表示要解析的数字的基数。该值介于 2 ~ 36 之间。
如果省略该参数或其值为 0，则数字将以 10 为基础来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。
如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN。


2作为基数。这就意味着字符串将被解析成字节数，也就是仅仅包含数值0和1。parseInt的规范第十一步指出，它仅尝试分析第一个字符的左侧，这个字符还不是要求基数的有效数字。这个字符串的第一个字符是“3”，它并不是基础基数2的一个有效数字。所以这个子字符串将被解析为空。第十二步说了：如果子字符串被解析成空了，函数将返回为NaN

