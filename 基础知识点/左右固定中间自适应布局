// 左右固定 中间自适应
// 两列定宽，中间自适应

会了三栏还能不会两栏？？？？？
注：float虽然也是脱离文档流,但还占用页面位置
定位脱离文档流不占位置

1.flex布局
<div id="box">
			<div id="left">left</div>
			<div id="center">center</div>
			<div id="right">right</div>
</div>
父盒子：display:flex;
center盒子：flex:1;

2.浮动float布局
让左右元素浮动，缺点是中间元素必须置于二者之后，不然right元素会进入下一行
center的左右其实是被浮动元素遮住了
放在第一个两个都会进入下一行


3.定位
子绝父相
center居中并利用margin为左右两边留出位置，左右绝对定位 top：0   left/right：0

4.圣杯布局
(1)首先设置左右两个div宽度以及container容器的左右内边距分别为left、right盒子的宽度，给左右两个盒子留地方
(2)给三个盒子添加左浮动
(3)让left与right“爬升”至第一行
	.container {
			padding: 0 100px; 
			overflow:hidden;
		}
		.center, .left, .right {
			position: relative; 
			float: left;
		}
		.center {
			width: 100%;
			height: 200px;
			background:yellow;
		}
		.left,.right {
			width: 100px; 
			height: 200px; 
			background:red;
		}
		.left{
			margin-left: -100%;
			left: -100px;
		}
		.right {
			margin-left: -100px; 
			right: -100px;
		}
		
		</style>
	</head>
	<body>
		<div class="container">
		    <div class="center">center</div>
		    <div class="left">left</div>
		    <div class="right">right</div>
        </div>
	</body>

5.双飞翼布局

left、center、right三种都设置左浮动
设置center宽度为100%
设置负边距，left设置负边距为100%，right设置负边距为自身宽度
设置center的content的margin值为左右两个侧栏留出空间，margin值大小为left和right宽度
 .container {
    overflow: hidden;
  }
  .left, .right, .center {
    float: left;
    height:200px
  }
  .center {
    width: 100%;
    background: yellow
  }
  .left {
    width: 200px;
    margin-left: -100%;
	// 没有父盒子就不用移动了
    background: blue
  }
  .right {
    width: 150px;
    margin-left: -150px;
    background: blue
  }
  .content {
    margin: 0 150px 0 200px;
  }
</style>
 
<body>
  
 	<div class="container">
    <div class="center">
		<div class="content">center</div>
    </div>
    <div class="left">left</div>
    <div class="right">right</div>
    </div>
 

</body>
 "right">right</div>
</body>












6.CALC性能不好，不建议使用






