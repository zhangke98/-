cookie：
一个网页会有多个请求，每个请求里都会携带cookie  (在请求头中)开销很大
相同的key但是Domain和Path不同，它并不会覆盖
cookie的缺点
1.存储大小最大是4KB
2.http请求时需要发送到服务端，增加请求数据量
3.只能用document.cookie = 'a=100;b=200'来修改，太过于简陋
将cookie内容发给服务器，如果加个user_id服务器就知道是哪个用户了

html5存储：
1.localStorage和sessionStorage是HTML5专门为存储设计的，每个域最大可存储5M（对于前端存储字符串这个空间够大了）
2.localStorage和sessionStorage的API简单易用setItem   getItem
3.不会随着http请求被发送出去（cookie就会被发送出去，要是localStorage和sessionStorage随着http请求发送出去手机流量早就没了）
再说一下俩storage的区别
1.localStorage数据会永久存储，除非代码或手动删除
2.sessionStorage数据只存在于当前会话，浏览器关闭则清空



localStorage.setItem('a',100)  key和value都是string  不是也会被强制类型转换
sessionSrorage.getItem('a')

cookie localStorage sessionStorage的区别
1.容量
2.API易用性
3.是否跟随http请求发送出去


cookie和session的区别
（1）cookie机制采用的是在客户端保持状态的方案，即把数据存放在客户的浏览器上。session采用的是在服务器端保持状态的方案，即数据放在服务器上。
（2）cookie安全性不够，由于cookie信息放在客户端，很容易被cookie欺骗。而seesion信息放在服务器端，因此较安全。
（3）cookie性能更高一些，由于session会在一定时间内保持在服务器上，因此当访问量增多时，会降低服务器的性能。
（4）单个cookie保存的数据不能超过4KB，很多浏览器都限制一个站点最多保存20个cookie。而session不存在此问题。




服务器设置session 服务器返回给客户端的信息 在响应头中 带着set-cookie="connect.sid"
客户端会把信息种植到本地的cookie中而且是httponly 客户端再次请求服务器的时候，会默认在请求头中
cookies把connect.sid传给服务器

