TCP建立连接需要三次握手，断开连接需要四次挥手

三次握手 
第一次：客户端发送建立连接的请求报文，其中SYN为1，序列号seq假设为x
第二次：服务端接收到客户端的请求报文之后，会发送一个确认报文，其中SYN为1，ACK为1,seq假设为y,确认号ack为x+1
第三次：当客户端接收到服务端的确认报文后，还需要向服务端发送一个确认报文，其中ACK为1，seq为x+1,ack为y+1
当服务端收到客户端的确认报文之后，tcp连接就建立了




四次挥手
第一次：客户端发送释放连接报文，其中FIN为1，seq假设为u
第二次：服务端接受到释放连接报文之后发送确认报文其中，ACK为1，seq假设为v，ack为u+1
//在这中间服务端可能又发送了一些数据
第三次：接着服务端发送释放连接报文，FIN为1，ACK为1，seq假设为w，ack为u+1
第四次挥手：客户端端接受到释放连接报文段之后发送确认报文段，ACK为1，seq为u+1，ack为w+1

服务端只要收到了客户端发出的确认，此次TCP连接就断开了




三次握手其实是说发了三次报文  其实只握了一次手




建立连接：客户端最初的状态是CLOSED状态，发送建立连接的请求报文段，请求报文段中SYN为1，seq（序列号）假设为x，发送完成之后客户端的状态由CLOSED转为SYN_SENT状态，服务器端最初状态是CLOSED状态，接着转为LISTEN状态。这里需要说一下，服务器端由CLOSED状态转为LISTEN状态是由服务器自己决定的，并不是说，服务器端在客户端发送请求报文段的时候同步转为LISTEN状态，实际上服务器端一般要先将CLOSED状态转为LISTEN状态。服务器端收到客户端的请求报文段之后，会发送一个确认报文段，同时服务器的状态也有LISTEN转为SYN_RCVD状态，确认报文段的ACK为1，SYN为1，seq假设为y，ack（序列号确认号）为x+1，这里的ack是指服务器端期望客户端发送的下一个序列号值，等到客户端接收到确认报文段之后，状态就成了ESTABLISHED状态，并发送确认报文段，ACK为1，seq为x+1，ack为y+1；


四次挥手：
客户端发送释放连接报文段，其中FIN为1，seq假设为u，客户端也由ESTABLISHED转为FIN_WAIT1;服务器端接受到释放连接报文段之后发送确认释放连接报文段，ACK为1，seq假设为v，ack为u+1，状态由ESTABLISHED转为CLOSED_WAIT状态；客户端接收到确认释放连接报文段之后状态转为FIN_WAIT2；接着服务器端发送释放连接报文段，FIN为1，ACK为1，seq假设为w，ack为u+1，状态转为LAST_ACK，客户端接收到之后转为TIME_WAIT；过2MSL后转为CLOSED状态，服务器端接受到最后一个确认后转为CLOSED。



TCP报文中比较重要的字段有：
（1）序号（sequence number）：Seq序号，占32位，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记。
（2）确认号（acknowledgement number）：Ack序号，占32位，只有ACK标志位为1时，确认序号字段才有效，Ack=Seq+1。
（3）标志位（Flags）：共6个，即URG、ACK、PSH、RST、SYN、FIN等。具体含义如下：


TCP报文的结构:20字节的固定首部和数据